import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';

import { preview } from '../assets';
import { getRandomPrompt } from '../utils';
import { FormField, Loader } from '../components';


const CreatePost = () => {
  const navigate = useNavigate();
  const [form, setForm] = useState({
    name: '',
    prompt: '',
    photo: ''
  });
  const [generatingImg, setGeneratingImg] = useState(false);
  const [loading, setLoading] = useState(false);

  const handleChange = (e) => { 
    setForm({...form, [e.target.name]: e.target.value});
  }
  const handleSubmit = async (e) => {
    e.preventDefault();
    if(form.prompt && form.photo){
      try{
        setLoading(true);
        const response = await fetch('http://localhost:8080/api/v1/post',{
        method:'POST',  
        headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(form)
        });
  
        const data = await response.json();
        navigate('/')
      }
      catch(e){
        alert(e);
      }
      finally{
        setLoading(false);
      }
    }else{
      alert('generate an image first');
    } 
  }

  const handleSurpriseMe = () => { 
    const randomPrompt = getRandomPrompt(form.prompt);
    setForm({...form, prompt: randomPrompt});
  }

  const generateImage = async () => { 
    if(form.prompt){
        try{
        setGeneratingImg(true);
        const response = await fetch('http://localhost:8080/api/v1/dhalli',{
        method:'POST',  
        headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({prompt: form.prompt})
        });
  
        const data = await response.json();
  
        setForm({...form, photo: `data:image/jpeg;base64,${data.photo}`})
      }
      catch(e){
        alert(e);
      }
      finally{
        setGeneratingImg(false);
      }
    }else {
      alert('please enter a prompt');
    }
  }

  return (
    <section className='max-w-7xl mx-auto'>
      <div>
        <h1 className='font-extrabold text-[#222328] text-[32px]'>
          The community showcase
        </h1>
        <p className='mt-2 text-[#666e75] text-[16px] max-w[500px]'>
          Browse through a collection of imaginative and visually stunning images generated by DALL-E AI
        </p>
      </div>
      <form className='mt-16 max-w-3x1' onSubmit={handleSubmit}>
        <div className='flex flex-col gap-5'>
          <FormField
            lableName="your name"
            type="text"
            name="name"
            placeHolder="jhon doe"
            value={form.name}
            handleChange={handleChange}
          />
          <FormField
            lableName="prompt"
            type="text"
            name="prompt"
            placeHolder="A Samurai riding a Horse on Mars, lomography."
            value={form.prompt}
            handleChange={handleChange}
            isSurpriseMe
            handleSurpriseMe={handleSurpriseMe}
          />

          <div className='relative bg-gray-50 border-gray-300 text-sm border text-gray-900 rounded-lg focus:ring-blue-500 w-64 p-3 h-64 flex justifu-center items-center'>
            {form.photo ? (
              <img src={form.photo} alt={form.prompt} className='w-full h-full object-contain'  />
            ):(
            <img src={preview} alt='preview' className='w-9/12 h-9/12 object-contain opacity-40' />
            )}
            {generatingImg && (
              <div className=' absolute inset-0 z-0 flex justify-center items-center bg-[rgba(0,0,0,0.5)] rounded-lg'>
                <Loader />
              </div>
            )}
          </div>
        </div>
        <div className='mt-5 flex gap-5'>
          <button type='button' className='text-white bg-green-700 font-medium rounded-md text-sm w-full sm:w-auto px-5 py-2.5' onClick={generateImage}>
            {generatingImg ? 'Generating': 'Generate'}
          </button>
        </div>
        <div className='mt-10'>
          <p className='mt-2 text-[#666e75] text-[14px]'>
            Once you have created the image you want, you can share it with others in the community
          </p>
          <button type='submit' className='mt-3 text-white bg-[#6469ff] font-medium rounded-md text-sm w-full sm:w-auto px-5 py-2.5 text-center'>
            {loading ? 'Sharing...' : 'Share'}
          </button>
        </div>
      </form>
    </section>
  )
}

export default CreatePost